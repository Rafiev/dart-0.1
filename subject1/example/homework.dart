import 'dart:ffi';
import 'dart:io';
import 'dart:math';

//! Дз 1
/*
1. Объявить переменную типа данных String, название которой состоит из нескольких слов
2. Создать константу “NUM” типа данных int и задать ей любое значение
3. Создать переменную “word” типа данных String с любым значением
4. Задать значение переменной объявленной в самом начале, которое состояло бы из результата конкатенации константы “NUM”  и переменной “word”.
5. Вывести на экран значение всех переменных в одну строку
6. Добавить только 1 условную конструкцию, которая бы выводила на экран следующее: если значение константы “NUM” меньше нуля - “Вы сохранили отрицательное число”, если же значение больше нуля - “Вы сохранили положительное число”, иначе - “Вы сохранили ноль”
ДЗ на сообразительность:
7. Сделать так, чтобы программа выводила в консоль строку “Введите ваше имя:”
8. Затем считывала имя пользователя, введенное с клавиатуры
9. И в конце здоровалась с пользователем по имени которое вы ввели с клавиатуры
*/

// String str = 'Hello world';
// const int two = 2;
// String word = 'John'; 

// void main() {
  
//   str = two.toString() + ' ' + word; 
//   print(str);
  
//   print('значение всех переменных в одну строку: $str $two $word');
  
//   if (two < 0){
//     print('Вы сохранили отрицательное число');
//   } else {
//     print('Вы сохранили положительное число');
//   }

//   print('Введите ваше имя:');
//   String ?name = stdin.readLineSync();
//   print('Привет $name');
// }

//! Дз 2
/*
Создать возвращаемый метод который будет принимать 2 входящих параметра - возраст человека и температуру на улице, и возвращать результат в виде строки.
Алгоритм метода должен работать следующим образом: 
если возраст человека от 20 до 45 лет и температура на улице от -20 до 30 градусов, то возвращаемый результат - “Можно идти гулять”;
если же человеку меньше 20 лет и температура на улице в диапазоне от 0 до 28 градусов, то результат снова -  “Можно идти гулять”;
а если человеку больше 45 лет, то результат “Можно идти гулять” формируется только тогда когда на улице температура в диапазоне от -10 до 25 градусов;
В остальных случаях метод должен возвращать результат - “Оставайтесь дома”;
В методе main вызвать написанный метод 5 раз с различными входными данными (аргументами) и распечатать результат в консоль.
ДЗ на сообразительность:
Написать метод в котором генерируется случайный возраст public static int generateRandomAge(){........} 
При вызове метода, который формирует результат “можно ли идти гулять” использовать генерирование случайного возраста с помощью метода “generateRandomAge” test(23, 10); test(generateRandomAge(), 10);
*/

/*
void main() {
  func(21, -10);
  func(18, 28);
  func(46, 24);
  func(generateRandomAge(), -9);
}

int generateRandomAge() {
  Random random = Random();
  return random.nextInt(50);
}

void func(int age, int temp) {
  if ((20 <= age && age <=45) && (30 >= temp && temp >= -20)){
    print('Можно идти гулять');
  } else if(20 >= age && (28 >= temp && temp >= 0)){
    print('Можно идти гулять');
  } else if(45 <=  age && (25 >= temp && temp >= -10)){
    print('Можно идти гулять');
  } else{
    print('Оставайся дома');
  }
}
*/

//! Дз 3
/*
Создать массив дробных (не целых) чисел размером 15 элементов и наполнить его положительными и отрицательными числами;
Затем через цикл “for each” посчитать среднее арифметическое положительных чисел расположенных после первого отрицательного числа и вывести его на экран (8, -2, -4, 2, 3, 6) =  11/3
ДЗ на сообразительность:
Вам необходимо написать следующий алгоритм сортировки массива по возрастанию: каждую итерацию выбирать самый минимальный элемент и смещать его в начало. При этом каждую новую итерацию начинать сдвигаясь вправо, то есть первый проход — с первого элемента, второй проход — со второго и т.д.
И при каждой итерации распечатывать текущее состояние массива
{-4, -2, 2, 3, 6, 8}
*/
/*
void main() {
  List<double> negative = List.generate(7, (index) => index * -1.5);
  List<double> positive = List.generate(7, (index) => index * 1.5);
  positive.addAll(negative);
  Random random = Random();
  positive.shuffle(random);
  List<double> ls = [];
  positive.forEach((value){
    if(value > 0){
      ls.add(value);
    };
  });
  double avrg = ls.reduce((a, b) => a + b) / ls.length;
  print('Среднее арифмитическое число положительных чисел: $avrg');
}
*/
// На сообразительность 
/*
void selectionSort(List<int> array) {
  int n = array.length;

  for (int i = 0; i < n - 1; i++) {
    int minIndex = i;
    for (int j = i + 1; j < n; j++) {
      if (array[j] < array[minIndex]) {
        minIndex = j;
      }
    }

    int temp = array[minIndex];
    array[minIndex] = array[i];
    array[i] = temp;
  }
}

void main() {
  List<int> mass = [8, -2,  6, -4, 3, 2];
  print('Original array: $mass');
  selectionSort(mass);
  print('Sorted array: $mass');
}
*/


//! Дз 4
/*
a)  В задании нельзя использовать циклы for и for each. Только while и Iterator
b)  Написать приложение которое бы считывало сначала 5 строк которые вводит юзер и сохраняла бы их в Список А.
c)  Затем программа должна отобразить этот список
d)  Потом программа считывает еще 5 строк, которые вводит юзер и помещает их в Список Б. После также отображает его в консоли
e)  Объединить Список А со Списком Б в новый список С следующим образом {A1,B5,А2,Б4,А3,Б3,А4,Б2,А5,Б1}
f)  После объединения отобразить в консоли список С
g)   В конце отсортировать элементы списка С по длине слова, сначала идут String-и с наименьшим количеством символов, и распечатать отсортированный список С.1
*/

/*
List<String?> my_program(){
  int count = 0;
  List<String?> a = [];
  List<String?> b = [];
  while(count < 10){
    count++;
    print('Введите строку:');
    String? input = stdin.readLineSync();
    if(count<6){a.add(input);}else{b.add(input);}
    if(count==5){print('Вот список A:$a');}else if(count==10){print('Вот список B:$b');}
  }
  List<String?> c = [];
  Iterator<String?> iteratorA = a.iterator;
  Iterator<String?> iteratorB = b.reversed.iterator; 
  while (iteratorA.moveNext() && iteratorB.moveNext()) {
    c.add(iteratorA.current); 
    c.add(iteratorB.current); 
  }
  print('Вот обьединенный список C:$c');
  return c;
}

void sort_ls(list){
  int n = list.length;

  for (int i = 0; i < n - 1; i++) {
    int minIndex = i;
    for (int j = i + 1; j < n; j++) {
      if (list[j].length < list[minIndex].length) {
        minIndex = j;
      }
    }

    String temp = list[minIndex];
    list[minIndex] = list[i];
    list[i] = temp;
  }
  print('Отсартированный список C: $list');
}

void main(){
  sort_ls(my_program());
}
*/

//! Дз 5
/*
Создать HashMap dictionary, ключом сделать тип данных String, а типом данных обозначить массив строк String[1.
И поместить в него 4 элемента: ключом является любое слово, а значением его
синонимы.
*/

//! Дз 6
/*
Посредством сканера считывать слова, введенные пользователем являющиеся ключами нашего словаря
И распечатывать подобранные случайным образом синонимы к этим словам.
*/